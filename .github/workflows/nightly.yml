name: Daily Pull and Vulnerability Scan

on:
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual trigger

jobs:
  pull-and-scan:
    name: Pull and Scan Image
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.THE_DOCKER_USER }}
          password: ${{ secrets.THE_DOCKER_PASS }}

      - name: Pull Docker image
        run: |
          IMAGE_NAME="jasonculligan/nmap-in-alpine:latest"
          docker pull $IMAGE_NAME
        env:
          IMAGE_NAME: jasonculligan/nmap-in-alpine:latest

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'jasonculligan/nmap-in-alpine:latest'
          format: 'table'
          exit-code: '1'  # Exit with code 1 if vulnerabilities are found
          ignore-unfixed: true  # Optional: ignore vulnerabilities without a fix
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Check if vulnerabilities are found
      id: check_scan
      run: |
        # Fail the job if vulnerabilities were found
        if [[ "${{ steps.scan_image.outputs.results }}" != "" ]]; then
          echo "Vulnerabilities found!"
          echo "needs_rebuild=true" >> $GITHUB_ENV
        else
          echo "No vulnerabilities found."
          echo "needs_rebuild=false" >> $GITHUB_ENV
        fi

    - name: Build and push Docker image
      if: env.needs_rebuild == 'true'
      id: push
      uses: docker/build-push-action@v3b5e8027fcad23fda98b2e3ac259d8d67585f671
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: your-registry/your-image-name:latest

      #- name: Rebuild and push updated image if vulnerabilities found
      #  if: failure()  # Runs only if the previous step fails (exit code 1)
      #  run: |
      #    # Rebuild the image with the latest base image
      #    #docker build --no-cache -t jasonculligan/nmap-in-alpine:latest .
      #    #docker push jasonculligan/nmap-in-alpine:latest
